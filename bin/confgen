#!/usr/bin/env python3
# License   :   AGPLv3 @ https://pigsty.io/docs/about/license
# Copyright :   2018-2024  Ruohang Feng / Vonng (rh@vonng.com)

import csv
import os
from datetime import datetime

##################################################
# CONSTANT                                       #
##################################################

SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
DATA_PATH = os.path.abspath(os.path.join(SCRIPT_DIR, '..', 'files', 'extension.csv'))
CONF_PATH = os.path.abspath(os.path.join(SCRIPT_DIR, '..', 'conf/build'))
TMPL_PATH = os.path.abspath(os.path.join(SCRIPT_DIR, '..', 'conf', 'template'))
VARS_PATH = os.path.abspath(os.path.join(SCRIPT_DIR, '..', 'roles', 'node_id', 'vars'))

PG_VERS = ['17', '16', '15', '14', '13', '12']
DISTROS = ['el8', 'el9', 'd12', 'u22', 'u24']
DEB_OS = ['d12', 'u22', 'u24']
RPM_OS = ['el8', 'el9']

THROW_LIST = ['pg_mooncake', 'pg_timeit', 'pgdd', 'hunspell_pt_pt' ]
HIDE_LIST = ['pgpool', 'plr', 'pgagent', 'dbt2', 'pgtap', 'faker', 'repmgr', 'slony', 'oracle_fdw', 'pg_strom', 'db2_fdw', 'pg_moonckae']


# these extensions will not be added to repo_packages & pg_extension due to various reasons
DISTRO_MISS = {
    "el7": ["pg_dbms_job", "pljava"],
    "el8": ["pg_dbms_job", "pljava"],
    "el9": ["pg_dbms_job" ],
    "u24": ["pgml", "citus", "topn", "timescaledb_toolkit"],
    "u22": [],
    "u20": ["pljava"],
    "d12": [],
    "d11": ["pljava"],
}

DISTRO_FULLNAME = {
    "el7": "RHEL 7 Compatible",
    "el8": "RHEL 8 Compatible",
    "el9": "RHEL 9 Compatible",
    "u24": "Ubuntu 24.04 noble Compatible",
    "u22": "Ubuntu 24.04 jammy Compatible",
    "u20": "Ubuntu 24.04 focal Compatible",
    "d12": "Debian 12 bookworm Compatible",
    "d11": "Ubuntu 11 bullseye Compatible",
}

# these extensions will be commented in pg_extensions due to conflict
EXT_NOP_LIST = ["pg_mooncake", "citus", "hunspell_pt_pt"]

EXTRA_COMMENT = {
    'pgpool': 'exclude due to not used',
    'plr': 'exclude due to heavy deps',
    'pgagent': 'exclude due to not used',
    'dbt2': 'exclude due to not used',
    'pgtap': 'exclude due to broken perl deps',
    'faker': 'exclude due to broken perl deps',
    'repmgr': 'exclude due to not used',
    'slony': 'exclude due to not used',
    'oracle_fdw': 'exclude due to heavy oracle deps',
    'pg_strom': 'exclude due to heavy cuda deps',
    'db2_fdw': 'exclude due to heavy db2 deps',
    'citus': 'conflict with hydra, no arm, no pg17',
    'hydra': 'conflict with citus, no pg17',
    'pg_duckdb': 'conflict with duckdb_fdw',
    'duckdb_fdw': 'conflict with pg_duckdb',
    'hunspell_pt_pt': 'conflict with default pg dict',
    'pg_dbms_job': 'exclude due to broken deps',
    'babelfishpg_common': 'work with wiltondb pg15 kernel',
    'babelfishpg_tsql': 'work with wiltondb pg15 kernel',
    'babelfishpg_tds': 'work with wiltondb pg15 kernel',
    'babelfishpg_money': 'work with wiltondb pg15 kernel',
}

RPM_COMMON_PKG = [
    #"ansible python3 python3-pip python3-virtualenv python3-requests python3-jmespath python3-cryptography dnf-utils modulemd-tools createrepo_c sshpass",
    "nginx dnsmasq etcd haproxy vip-manager pg_exporter pgbackrest_exporter redis_exporter redis minio mcli ferretdb duckdb",
    "grafana loki logcli promtail prometheus alertmanager pushgateway node_exporter blackbox_exporter nginx_exporter keepalived_exporter",
    "lz4 unzip bzip2 zlib yum pv jq git ncdu make patch bash lsof wget uuid tuned nvme-cli numactl grubby sysstat iotop htop rsync tcpdump perf flamegraph chkconfig",
    "netcat socat ftp lrzsz net-tools ipvsadm bind-utils telnet audit ca-certificates readline vim-minimal keepalived chrony openssl openssh-server openssh-clients",
    "patroni patroni-etcd pgbouncer pgbackrest pgbadger pg_activity pg_timetable pgFormatter pg_filedump pgxnclient timescaledb-tools pgcopydb",
]

DEB_COMMON_PKG = [
    #"ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass",
    "nginx dnsmasq etcd haproxy vip-manager pg-exporter pgbackrest-exporter redis-exporter redis minio mcli ferretdb duckdb",
    "grafana loki logcli promtail prometheus alertmanager pushgateway node-exporter blackbox-exporter nginx-exporter keepalived-exporter",
    "lz4 unzip bzip2 zlib1g pv jq git ncdu make patch bash lsof wget uuid tuned nvme-cli numactl sysstat iotop htop rsync tcpdump acl chrony",
    "netcat-openbsd socat lrzsz net-tools ipvsadm dnsutils telnet ca-certificates libreadline-dev vim-tiny keepalived openssl openssh-server openssh-client",
    "patroni pgbouncer pgbackrest pgbadger pg-activity pg-timetable pgformatter postgresql-filedump pgxnclient timescaledb-tools pgcopydb",
]

DISTRO_ADHOC_PKG = {
    "rpm": "ansible python3 python3-pip python3-virtualenv python3-requests python3-jmespath python3-cryptography dnf-utils modulemd-tools createrepo_c sshpass",
    "deb": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass",
    "el7": "ansible python3 python3-pip python36-virtualenv python36-requests python36-idna yum-utils createrepo_c sshpass",
    "el8": "ansible python3 python3-pip python3-virtualenv python3-requests python3.12-jmespath python3-cryptography dnf-utils modulemd-tools createrepo_c sshpass",
    "el9": "ansible python3 python3-pip python3-virtualenv python3-requests python3-jmespath python3-cryptography dnf-utils modulemd-tools createrepo_c sshpass",
    "d11": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass tnftp linux-perf",
    "d12": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass tnftp linux-perf",
    "u20": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass ftp linux-tools-generic",
    "u22": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass ftp linux-tools-generic",
    "u24": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass ftp linux-tools-generic",
}



RPM_REPO = """
- { name: pigsty-local   ,description: 'Pigsty Local'      ,module: local   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://${admin_ip}/pigsty'  }} # used by intranet nodes
- { name: pigsty-infra   ,description: 'Pigsty INFRA'      ,module: infra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/yum/infra/$basearch' ,china: 'https://repo.pigsty.cc/yum/infra/$basearch' }}
- { name: pigsty-pgsql   ,description: 'Pigsty PGSQL'      ,module: pgsql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/yum/pgsql/el$releasever.$basearch' ,china: 'https://repo.pigsty.cc/yum/pgsql/el$releasever.$basearch' }}
- { name: nginx          ,description: 'Nginx Repo'        ,module: infra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://nginx.org/packages/rhel/$releasever/$basearch/' }}
- { name: baseos         ,description: 'EL 8+ BaseOS'      ,module: node    ,releases: [  8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/BaseOS/$basearch/os/'     ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/BaseOS/$basearch/os/'          ,europe: 'https://mirrors.xtom.de/rocky/$releasever/BaseOS/$basearch/os/'     }}
- { name: appstream      ,description: 'EL 8+ AppStream'   ,module: node    ,releases: [  8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/AppStream/$basearch/os/'  ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/AppStream/$basearch/os/'       ,europe: 'https://mirrors.xtom.de/rocky/$releasever/AppStream/$basearch/os/'  }}
- { name: extras         ,description: 'EL 8+ Extras'      ,module: node    ,releases: [  8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/extras/$basearch/os/'     ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/extras/$basearch/os/'          ,europe: 'https://mirrors.xtom.de/rocky/$releasever/extras/$basearch/os/'     }}
- { name: powertools     ,description: 'EL 8 PowerTools'   ,module: node    ,releases: [  8  ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/PowerTools/$basearch/os/' ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/PowerTools/$basearch/os/'      ,europe: 'https://mirrors.xtom.de/rocky/$releasever/PowerTools/$basearch/os/' }}
- { name: crb            ,description: 'EL 9 CRB'          ,module: node    ,releases: [    9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/CRB/$basearch/os/'        ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/CRB/$basearch/os/'             ,europe: 'https://mirrors.xtom.de/rocky/$releasever/CRB/$basearch/os/'        }}
- { name: epel           ,description: 'EL 8+ EPEL'        ,module: node    ,releases: [  8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://download.fedoraproject.org/pub/epel/$releasever/Everything/$basearch/' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/epel/$releasever/Everything/$basearch/' ,europe: 'https://mirrors.xtom.de/epel/$releasever/Everything/$basearch/'     }}
- { name: pgdg-common    ,description: 'PostgreSQL Common' ,module: pgsql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/common/redhat/rhel-$releasever-$basearch' , europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg-el8fix    ,description: 'PostgreSQL EL8FIX' ,module: pgsql   ,releases: [  8  ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/pgdg-centos8-sysupdates/redhat/rhel-8-x86_64/' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/common/pgdg-centos8-sysupdates/redhat/rhel-8-x86_64/' , europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/pgdg-centos8-sysupdates/redhat/rhel-8-x86_64/' } }
- { name: pgdg-el9fix    ,description: 'PostgreSQL EL9FIX' ,module: pgsql   ,releases: [    9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/pgdg-rocky9-sysupdates/redhat/rhel-9-x86_64/'  ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/common/pgdg-rocky9-sysupdates/redhat/rhel-9-x86_64/' , europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/pgdg-rocky9-sysupdates/redhat/rhel-9-x86_64/' }}
- { name: pgdg12         ,description: 'PostgreSQL 12'     ,module: pgsql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/12/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/12/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/12/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg13         ,description: 'PostgreSQL 13'     ,module: pgsql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/13/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/13/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/13/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg14         ,description: 'PostgreSQL 14'     ,module: pgsql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/14/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/14/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/14/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg15         ,description: 'PostgreSQL 15'     ,module: pgsql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/15/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/15/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/15/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg16         ,description: 'PostgreSQL 16'     ,module: pgsql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/16/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/16/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/16/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg17         ,description: 'PostgreSQL 17'     ,module: pgsql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/17/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/17/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/17/redhat/rhel-$releasever-$basearch' }}
# these repos are not used by default, but can be enabled by setting repo_modules
- { name: pgdg-extras    ,description: 'PostgreSQL Extra'  ,module: extra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/pgdg-rhel$releasever-extras/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/common/pgdg-rhel$releasever-extras/redhat/rhel-$releasever-$basearch' , europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/pgdg-rhel$releasever-extras/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg12-nonfree ,description: 'PostgreSQL 12+'    ,module: extra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/12/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/non-free/12/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/12/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg13-nonfree ,description: 'PostgreSQL 13+'    ,module: extra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/13/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/non-free/13/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/13/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg14-nonfree ,description: 'PostgreSQL 14+'    ,module: extra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/14/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/non-free/14/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/14/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg15-nonfree ,description: 'PostgreSQL 15+'    ,module: extra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/15/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/non-free/15/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/15/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg16-nonfree ,description: 'PostgreSQL 16+'    ,module: extra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/16/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/non-free/16/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/16/redhat/rhel-$releasever-$basearch' }}
- { name: pgdg17-nonfree ,description: 'PostgreSQL 17+'    ,module: extra   ,releases: [7,8,9] ,arch: [x86_64         ] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/17/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/non-free/17/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/17/redhat/rhel-$releasever-$basearch' }}
- { name: timescaledb    ,description: 'TimescaleDB'       ,module: extra   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packagecloud.io/timescale/timescaledb/el/$releasever/$basearch'  }}
- { name: docker-ce      ,description: 'Docker CE'         ,module: docker  ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.docker.com/linux/centos/$releasever/$basearch/stable'    ,china: 'https://mirrors.aliyun.com/docker-ce/linux/centos/$releasever/$basearch/stable'  ,europe: 'https://mirrors.xtom.de/docker-ce/linux/centos/$releasever/$basearch/stable' }}
- { name: kubernetes     ,description: 'Kubernetes'        ,module: kube    ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://pkgs.k8s.io/core:/stable:/v1.31/rpm/', china: 'https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.31/rpm/' }}
- { name: wiltondb       ,description: 'WiltonDB'          ,module: mssql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.copr.fedorainfracloud.org/results/wiltondb/wiltondb/epel-$releasever-$basearch/', china: 'https://repo.pigsty.cc/yum/mssql/el$releasever.$basearch' }}
- { name: ivorysql       ,description: 'IvorySQL'          ,module: ivory   ,releases: [7,8,9] ,arch: [x86_64         ] ,baseurl: { default: 'https://repo.pigsty.io/yum/ivory/el$releasever.$basearch', china: 'https://repo.pigsty.cc/yum/ivory/el$releasever.$basearch' }}
- { name: mysql          ,description: 'MySQL'             ,module: mysql   ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.mysql.com/yum/mysql-8.0-community/el/$releasever/$basearch/', china: 'https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-8.0-community-el7-$basearch/' }}
- { name: grafana        ,description: 'Grafana'           ,module: grafana ,releases: [7,8,9] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://rpm.grafana.com' }}
"""

DEB_REPO = """
- { name: pigsty-local  ,description: 'Pigsty Local'     ,module: local     ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://${admin_ip}/pigsty ./' }}
- { name: pigsty-pgsql  ,description: 'Pigsty PgSQL'     ,module: pgsql     ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/apt/pgsql/${distro_codename} ${distro_codename} main', china: 'https://repo.pigsty.cc/apt/pgsql/${distro_codename} ${distro_codename} main' }}
- { name: pigsty-infra  ,description: 'Pigsty Infra'     ,module: infra     ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/apt/infra/ generic main' ,china: 'https://repo.pigsty.cc/apt/infra/ generic main' }}
- { name: nginx         ,description: 'Nginx'            ,module: infra     ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://nginx.org/packages/${distro_name} ${distro_codename} nginx' }}
- { name: base          ,description: 'Debian Basic'     ,module: node      ,releases: [11,12         ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://deb.debian.org/debian/ ${distro_codename} main non-free-firmware'         ,china: 'https://mirrors.aliyun.com/debian/ ${distro_codename} main restricted universe multiverse' }}
- { name: updates       ,description: 'Debian Updates'   ,module: node      ,releases: [11,12         ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://deb.debian.org/debian/ ${distro_codename}-updates main non-free-firmware' ,china: 'https://mirrors.aliyun.com/debian/ ${distro_codename}-updates main restricted universe multiverse' }}
- { name: security      ,description: 'Debian Security'  ,module: node      ,releases: [11,12         ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://security.debian.org/debian-security ${distro_codename}-security main non-free-firmware' }}
- { name: base          ,description: 'Ubuntu Basic'     ,module: node      ,releases: [      20,22,24] ,arch: [x86_64         ] ,baseurl: { default: 'https://mirrors.edge.kernel.org/ubuntu/ ${distro_codename}           main universe multiverse restricted' ,china: 'https://mirrors.aliyun.com/ubuntu/ ${distro_codename}           main restricted universe multiverse' }}
- { name: updates       ,description: 'Ubuntu Updates'   ,module: node      ,releases: [      20,22,24] ,arch: [x86_64         ] ,baseurl: { default: 'https://mirrors.edge.kernel.org/ubuntu/ ${distro_codename}-backports main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu/ ${distro_codename}-updates   main restricted universe multiverse' }}
- { name: backports     ,description: 'Ubuntu Backports' ,module: node      ,releases: [      20,22,24] ,arch: [x86_64         ] ,baseurl: { default: 'https://mirrors.edge.kernel.org/ubuntu/ ${distro_codename}-security  main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu/ ${distro_codename}-backports main restricted universe multiverse' }}
- { name: security      ,description: 'Ubuntu Security'  ,module: node      ,releases: [      20,22,24] ,arch: [x86_64         ] ,baseurl: { default: 'https://mirrors.edge.kernel.org/ubuntu/ ${distro_codename}-updates   main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu/ ${distro_codename}-security  main restricted universe multiverse' }}
- { name: base          ,description: 'Ubuntu Basic'     ,module: node      ,releases: [      20,22,24] ,arch: [        aarch64] ,baseurl: { default: 'http://ports.ubuntu.com/ubuntu-ports/ ${distro_codename}           main universe multiverse restricted' ,china: 'https://mirrors.aliyun.com/ubuntu-ports/ ${distro_codename}           main restricted universe multiverse' }}
- { name: updates       ,description: 'Ubuntu Updates'   ,module: node      ,releases: [      20,22,24] ,arch: [        aarch64] ,baseurl: { default: 'http://ports.ubuntu.com/ubuntu-ports/ ${distro_codename}-backports main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu-ports/ ${distro_codename}-updates   main restricted universe multiverse' }}
- { name: backports     ,description: 'Ubuntu Backports' ,module: node      ,releases: [      20,22,24] ,arch: [        aarch64] ,baseurl: { default: 'http://ports.ubuntu.com/ubuntu-ports/ ${distro_codename}-security  main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu-ports/ ${distro_codename}-backports main restricted universe multiverse' }}
- { name: security      ,description: 'Ubuntu Security'  ,module: node      ,releases: [      20,22,24] ,arch: [        aarch64] ,baseurl: { default: 'http://ports.ubuntu.com/ubuntu-ports/ ${distro_codename}-updates   main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu-ports/ ${distro_codename}-security  main restricted universe multiverse' }}
- { name: pgdg          ,description: 'PGDG'             ,module: pgsql     ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://apt.postgresql.org/pub/repos/apt/ ${distro_codename}-pgdg main' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/apt/ ${distro_codename}-pgdg main' }}
# these repos are not used by default, but can be enabled by setting repo_modules
- { name: citus         ,description: 'Citus'            ,module: extra     ,releases: [11,12,20,22   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packagecloud.io/citusdata/community/${distro_name}/ ${distro_codename} main' } }
- { name: timescaledb   ,description: 'Timescaledb'      ,module: extra     ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packagecloud.io/timescale/timescaledb/${distro_name}/ ${distro_codename} main' }}
- { name: grafana       ,description: 'Grafana'          ,module: grafana   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://apt.grafana.com stable main' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/grafana/apt/ stable main' }}
- { name: pgml          ,description: 'PostgresML'       ,module: pgml      ,releases: [         22   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://apt.postgresml.org ${distro_codename} main'  }}
- { name: wiltondb      ,description: 'WiltonDB'         ,module: mssql     ,releases: [      20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://ppa.launchpadcontent.net/wiltondb/wiltondb/ubuntu/ ${distro_codename} main', china: 'https://repo.pigsty.cc/apt/mssql/ ${distro_codename} main'  }}
- { name: mysql         ,description: 'MySQL'            ,module: mysql     ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.mysql.com/apt/${distro_name} ${distro_codename} mysql-8.0 mysql-tools', china: 'https://mirrors.tuna.tsinghua.edu.cn/mysql/apt/${distro_name} ${distro_codename} mysql-8.0 mysql-tools' }}
- { name: docker-ce     ,description: 'Docker'           ,module: docker    ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.docker.com/linux/${distro_name} ${distro_codename} stable' ,china: 'https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux//${distro_name} ${distro_codename} stable' }}
- { name: kubernetes    ,description: 'Kubernetes'       ,module: kube      ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /', china: 'https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.31/deb/ /' }}
"""


RPM_VARS_TMPL = """---
# License   :   AGPLv3 @ https://pigsty.io/docs/about/license
# Copyright :   2018-2024  Ruohang Feng / Vonng (rh@vonng.com)
# %s: %s OS specific vars

# where to register systemd files
systemd_dir: /usr/lib/systemd/system

# default packages to be downloaded (if `repo_packages` is not explicitly set)
repo_packages_default: [ node-bootstrap, infra-package, infra-addons, node-package1, node-package2, pgsql-utility ]

# default postgres packages to be downloaded
repo_extra_packages_default: [ pgsql-main ]

# default node packages to be installed (if `node_default_packages` is not explicitly set)
node_packages_default:
  - lz4,unzip,bzip2,pv,jq,git,ncdu,make,patch,bash,lsof,wget,uuid,tuned,nvme-cli,numactl,sysstat,iotop,htop,rsync,tcpdump
  - python3,python3-pip,socat,lrzsz,net-tools,ipvsadm,telnet,ca-certificates,openssl,keepalived,etcd,haproxy,chrony
  - zlib,yum,audit,bind-utils,readline,vim-minimal,node_exporter,grubby,openssh-server,openssh-clients,chkconfig

# default infra packages to be installed (if `infra_packages` is not explicitly set)
infra_packages_default:
  - grafana,loki,logcli,promtail,prometheus,alertmanager,pushgateway
  - node_exporter,blackbox_exporter,nginx_exporter,pg_exporter
  - nginx,dnsmasq,ansible,etcd,python3-requests,redis,mcli

# postgres home dir in various mode
pg_home_map:
  pgsql:  '/usr/pgsql-$v'
  citus:  '/usr/pgsql-$v'
  mssql:  '/usr/'
  polar:  '/u01/polardb_pg'
  ivory:  '/usr/local/ivorysql/ivorysql-3'
  gpsql:  '/usr/gpsql'
  oracle: '/u01/polardb_pg'

# default upstream repo (if `repo_upstream` is not explicitly set)
repo_upstream_default:
%s
  
# package alias map to simplify package download & installation
%s

..."""

DEB_VARS_TMPL = """---
# License   :   AGPLv3 @ https://pigsty.io/docs/about/license
# Copyright :   2018-2024  Ruohang Feng / Vonng (rh@vonng.com)
# %s: %s OS specific vars

# where to register systemd files
systemd_dir: /lib/systemd/system

# default packages to be downloaded (if `repo_packages` is not explicitly set)
repo_packages_default: [ node-bootstrap, infra-package, infra-addons, node-package1, node-package2, pgsql-utility ]

# default postgres packages to be downloaded
repo_extra_packages_default: [ pgsql-main ]

# default node packages to be installed (if `node_default_packages` is not explicitly set)
node_packages_default:
  - lz4,unzip,bzip2,pv,jq,git,ncdu,make,patch,bash,lsof,wget,uuid,tuned,nvme-cli,numactl,sysstat,iotop,htop,rsync,tcpdump
  - python3,python3-pip,socat,lrzsz,net-tools,ipvsadm,telnet,ca-certificates,openssl,keepalived,etcd,haproxy,chrony
  - zlib1g,acl,dnsutils,libreadline-dev,vim-tiny,node-exporter,openssh-server,openssh-client

# default infra packages to be installed (if `infra_packages` is not explicitly set)
infra_packages_default:
  - grafana,loki,logcli,promtail,prometheus,alertmanager,pushgateway
  - node-exporter,blackbox-exporter,nginx-exporter,pg-exporter
  - nginx,dnsmasq,ansible,etcd,python3-requests,redis,mcli

# postgres home dir in various mode
pg_home_map:
  pgsql:  '/usr/lib/postgresql/$v'
  citus:  '/usr/lib/postgresql/$v'
  mssql:  '/usr/lib/postgresql/$v'
  polar:  '/u01/polardb_pg'
  oracle: '/u01/polardb_pg'

# default upstream repo (if `repo_upstream` is not explicitly set)
repo_upstream_default:
%s

# package alias map to simplify package download & installation
%s

..."""

PGSQL_KERNEL_MAP = [
    ("pgsql-main",   "postgresql$v* pg_repack_$v* wal2json_$v* pgvector_$v*" ,"postgresql-$v postgresql-client-$v postgresql-plpython3-$v postgresql-plperl-$v postgresql-pltcl-$v postgresql-server-dev-$v postgresql-$v-repack postgresql-$v-wal2json postgresql-$v-pgvector"),
    ("pgsql-core",   "postgresql$v postgresql$v-server postgresql$v-libs postgresql$v-contrib postgresql$v-plperl postgresql$v-plpython3 postgresql$v-pltcl postgresql$v-test postgresql$v-devel postgresql$v-llvmjit"  ,"postgresql-$v postgresql-client-$v postgresql-plpython3-$v postgresql-plperl-$v postgresql-pltcl-$v postgresql-server-dev-$v"),
    ("pgsql-simple", "postgresql$v postgresql$v-server postgresql$v-libs postgresql$v-contrib postgresql$v-plperl postgresql$v-plpython3 postgresql$v-pltcl"  ,"postgresql-$v postgresql-client-$v postgresql-plperl-$v postgresql-plpython3-$v postgresql-pltcl-$v"),
    ("pgsql-client", "postgresql$v"  ,"postgresql-client-$v"),
    ("pgsql-server", "postgresql$v-server postgresql$v-libs postgresql$v-contrib"  ,"postgresql-$v"),
    ("pgsql-devel",  "postgresql$v-devel"  ,"postgresql-server-dev-$v"),
    ("pgsql-basic",  "pg_repack_$v* wal2json_$v* pgvector_$v*"  ,"postgresql-$v-repack postgresql-$v-wal2json postgresql-$v-pgvector"),
]


PGSQL_UTIL_MAP = [
    ("pgsql-common", "patroni patroni-etcd pgbouncer pgbackrest pg_exporter pgbadger vip-manager", "patroni pgbouncer pgbackrest pg-exporter pgbadger vip-manager"),
    ("patroni"      ,"patroni patroni-etcd"  ,"patroni"             ),
    ("pgbouncer"    ,"pgbouncer"             ,"pgbouncer"           ),
    ("pgbackrest"   ,"pgbackrest"            ,"pgbackrest"          ),
    ("pg_exporter"  ,"pg_exporter"           ,"pg-exporter"         ),
    ("vip-manager"  ,"vip-manager"           ,"vip-manager"         ),
    ("pgbadger"     ,"pgbadger"              ,"pgbadger"            ),
    ("pg_activity"  ,"pg_activity"           ,"pg-activity"         ),
    ("pg_filedump"  ,"pg_filedump"           ,"postgresql-filedump" ),
    ("pgxnclient"   ,"pgxnclient"            ,"pgxnclient"          ),
    ("pgformatter"  ,"pgformatter"           ,"pgformatter"         ),
    ("pgcopydb"     ,"pgcopydb"              ,"pgcopydb"            ),
    ("pgloader"     ,"pgloader"              ,"pgloader"            ),
    ("pg_timetable" ,"pg_timetable"          ,"pg-timetable"        ),
]


PGSQL_EXOTIC_MAP = [
    ("wiltondb"  , "wiltondb", "wiltondb" ),
    ("polardb"   , "PolarDB", "polardb-for-postgresql"),
    ("ivorysql"  , "ivorysql3 ivorysql3-server ivorysql3-contrib ivorysql3-libs ivorysql3-plperl ivorysql3-plpython3 ivorysql3-pltcl ivorysql3-test", ""),
    ("ivorysql-all"  , "ivorysql3 ivorysql3-server ivorysql3-contrib ivorysql3-libs ivorysql3-plperl ivorysql3-plpython3 ivorysql3-pltcl ivorysql3-test ivorysql3-docs ivorysql3-devel ivorysql3-llvmjit", ""),
    ("supabase", "pg_tle_$v*,pgvector_$v*,pg_cron_$v*,pgsodium_$v*,pg_graphql_$v,pg_jsonschema_$v,wrappers_$v,vault_$v,pgjwt_$v*,pgsql_http_$v*,pg_net_$v*,supautils_$v*,index_advisor_$v,safeupdate_$v*,pg_plan_filter_$v*", "postgresql-$v-pg-tle,postgresql-$v-pg-graphql,postgresql-$v-pg-jsonschema,postgresql-$v-wrappers,postgresql-$v-pgvector,postgresql-$v-cron,postgresql-$v-pgsodium,postgresql-$v-vault,postgresql-$v-pgjwt,postgresql-$v-http,postgresql-$v-pg-net,postgresql-$v-supautils,postgresql-$v-index-advisor,postgresql-$v-pg-safeupdate,postgresql-$v-pg-plan-filter"),
]



#########################################
# LOAD & GENERATE GLOBAL DATA
#########################################

# load data from files/extension.csv
def load_data(filepath=DATA_PATH):
    parse_array = lambda v: v[1:-1].split(',') if v.startswith('{') and v.endswith('}') else []
    data = []
    with open(filepath, newline='', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            row['id'] = int(row['id'])
            if row['rpm_pg']: row['rpm_pg'] = parse_array(row['rpm_pg'])
            if row['deb_pg']: row['deb_pg'] = parse_array(row['deb_pg'])
            row['lead']        =  True if row['lead']   == 't'  else False if row['lead'] == 'f'  else None
            row['has_rpm'] = True if row['rpm_repo'] else False
            row['has_deb'] = True if row['deb_repo'] else False
            data.append(row)
    return data

DATA = load_data()
CATE = list(dict.fromkeys([i['category'] for i in DATA]))


def process_ext(ver, distro, ext):
    if distro in ('rpm', 'el7', 'el8', 'el9'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY,  = 'rpm_repo', 'rpm_pkg', 'rpm_pg', 'has_rpm'
    elif distro in ('deb', 'u20', 'u22', 'u24', 'd12', 'd11'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY, = 'deb_repo', 'deb_pkg', 'deb_pg',  'has_deb'
    else:
        raise ValueError("Invalid distro: %s" % distro)
    name, alias, extension, package, pg_vers, avail = ext['name'], ext['alias'], ext['alias'], ext[PKG_KEY].replace('$v', ver), ext[VER_KEY], ext[HAS_KEY]
    hide_pkg, hide_ext, drop_pkg, drop_ext = True, True, False, False
    if avail and ver in pg_vers and name not in DISTRO_MISS[distro]:
        hide_pkg, hide_ext = False, False

    # rename extension field in certain cases
    if name == 'pgaudit' and distro in RPM_OS and ver in ['12','13','14','15']:
        # pgaudit bad case: pg16+ = pgaudit, pg15=pgaudit17, pg14=pgaudit16 pg13=pgaudit15 pg12=pgaudit14
        package, extension = package.replace('pgaudit', 'pgaudit' + str(int(ver)+2)), alias + str(int(ver)+2)
    if name == 'citus' and distro in DEB_OS and ver in ['12', '13']:
        package, extension = package.replace('citus-12.1', 'citus-' + ('10.2' if ver == '12' else '11.3') ), alias + str(int(ver)-2)
    if name == 'postgis' and distro in ['el8', 'el9'] and ver == '12': # el8/9 will use postgis34 for pg12
        package, extension = package.replace('postgis35', 'postgis34'), 'postgis34'
    if name == 'postgis' and distro == 'el7': # el7 with postgis33
        package, extension = package.replace('postgis35', 'postgis33'), 'postgis33'
    if name in ['pg_mooncake', 'citus']:
        hide_ext = True

    # ubuntu 24.04 bad case
    if distro == 'u24' and name == 'timescaledb' and ver == '12': # no timescaledb 12 for ubuntu24
        hide_pkg, hide_ext = True, True
    if distro == 'u24' and name in ['pg_partman', 'timeseries'] and ver in ['12','13']: # not pg_partman 12,13 for u24
        hide_pkg, hide_ext = True, True

    # version ad hoc logic

    # just don't want them
    if alias in THROW_LIST:
        drop_pkg, drop_ext = True, True
    if alias in HIDE_LIST:
        hide_pkg, hide_ext = True, True

    # merge babelfish pkg & ext into one wiltondb package/extension
    if name == 'babelfishpg_common' and distro in ['el7', 'el8', 'el9', 'u20', 'u22', 'u24']:
        package, extension = 'wiltondb', 'wiltondb'
        hide_pkg, hide_ext = True, True
    if name in ['babelfishpg_tsql','babelfishpg_tds','babelfishpg_money']:
        drop_pkg, drop_ext = True, True
    if name.startswith('babelfishpg') and distro not in ['el7', 'el8', 'el9', 'u20', 'u22', 'u24']:
        drop_pkg, drop_ext = True, True   # wiltondb not available on other platforms

    # merge hunspell pkg & ext into one wiltondb package/extension
    if name == 'hunspell_cs_cz':
        extension = 'hunspell'
    if name.startswith('hunspell') and name != 'hunspell_cs_cz':
        drop_ext = True # package still need to be downloaded

    pkg_aye, pkg_nay, ext_aye, ext_nay = [], [], [], []
    if not drop_pkg:
        if hide_pkg: pkg_nay.append('#' + package)
        else: pkg_aye.append(package)
    if not drop_ext:
        if hide_ext: ext_nay.append('#' + extension)
        else: ext_aye.append(extension)

    return pkg_aye, pkg_nay, ext_aye, ext_nay



# generate postgres related repo_package list and pg_extension according to pg major version and os distro
def gen_ext_list(ver, distro):
    if distro.lower() in ('rpm', 'el7', 'el8', 'el9'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY,  = 'rpm_repo', 'rpm_pkg', 'rpm_pg', 'has_rpm'
    elif distro.lower() in ('deb', 'u20', 'u22', 'u24', 'd12', 'd11'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY, = 'deb_repo', 'deb_pkg', 'deb_pg',  'has_deb'
    else:
        raise ValueError("Invalid distro: %s" % distro)

    # generate pkg & ext list, per category
    repo_pkg, ext_list = [], []
    for cate in CATE:
        pkg_aye, pkg_nay, ext_aye, ext_nay = [], [], [], []
        for ext in [e for e in DATA if e['category'] == cate and e[REPO_KEY] != 'CONTRIB' and e['lead']]:
            #ext['package'], ext['pg_ver'], ext['avail'] =  ext[PKG_KEY].replace('$v', ver), ext[VER_KEY], ext[HAS_KEY]
            t_pkg_aye, t_pkg_nay, t_ext_aye, t_ext_nay = process_ext(ver, distro, ext)
            pkg_aye.extend(t_pkg_aye)
            pkg_nay.extend(t_pkg_nay)
            ext_aye.extend(t_ext_aye)
            ext_nay.extend(t_ext_nay)

        repo_entry = (' '.join(list(dict.fromkeys(pkg_aye))) + ' ' + ' '.join(list(dict.fromkeys(pkg_nay)))).rstrip('# ')
        ext_entry = (' '.join(list(dict.fromkeys(ext_aye))) + ' ' + ' '.join(list(dict.fromkeys(ext_nay)))).rstrip('# ')
        repo_pkg.append(repo_entry)
        ext_list.append(ext_entry.replace('#babelfishpg_common #babelfishpg_tsql #babelfishpg_tds #babelfishpg_money', '#wiltondb'))

    return repo_pkg, ext_list

# generate postgres related repo_package list and pg_extension according to pg major version and os distro
def gen_pkg_list(ver, distro):
    repo_pkg = []
    if distro.lower() in ('rpm', 'el7', 'el8', 'el9'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY,  = 'rpm_repo', 'rpm_pkg', 'rpm_pg', 'has_rpm'
    elif distro.lower() in ('deb', 'u20', 'u22', 'u24', 'd12', 'd11'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY, = 'deb_repo', 'deb_pkg', 'deb_pg',  'has_deb'
    else:
        raise ValueError("Invalid distro: %s" % distro)
    for cate in CATE:
        pkg_aye, pkg_nay, ext_aye, ext_nay = [], [], [], []
        for ext in [e for e in DATA if e['category'] == cate and e[REPO_KEY] != 'CONTRIB' and e['lead']]:
            t_pkg_aye, t_pkg_nay, t_ext_aye, t_ext_nay = process_ext(ver, distro, ext)
            pkg_aye.extend(t_pkg_aye)
            pkg_nay.extend(t_pkg_nay)
        repo_entry = ('"' + ' '.join(list(dict.fromkeys(pkg_aye))) + '" ' + ' '.join(list(dict.fromkeys(pkg_nay)))).rstrip('# ')
        cate_name = 'pg%s-%s:' % (ver, cate.lower())
        repo_pkg.append("  %-24s %s" %( cate_name,  repo_entry))
    return repo_pkg


def gen_param(ver, distro, indent=0, header=True):
    distro = distro.lower()
    head_pad = '  ' * indent
    text_pad = '  ' * (indent + 1) + '- '

    pkg_list, ext_list = gen_ext_list(ver, distro)
    common_packages = []
    if distro in ('rpm', 'el7', 'el8', 'el9'):
        common_packages = [DISTRO_ADHOC_PKG.get(distro)] + RPM_COMMON_PKG
        pgsql_kernel = '%-159s # PostgreSQL %s' % ( 'postgresql%s*'%ver, ver)
    elif distro in ('deb', 'u20', 'u22', 'u24', 'd12', 'd11'):
        common_packages = [DISTRO_ADHOC_PKG.get(distro)] + DEB_COMMON_PKG
        pgsql_kernel = '%-150s # PostgreSQL %s' % ('postgresql-%s postgresql-client-%s postgresql-server-dev-%s postgresql-plpython3-%s postgresql-plperl-%s postgresql-pltcl-%s' % (ver,ver,ver,ver,ver,ver) , ver)
    else:
        raise("invalid distro")
    pgsql_packages = [pgsql_kernel] + pkg_list
    if header:
        all_pkgs =  common_packages + pgsql_packages
    else:
        all_pkgs =  pgsql_packages
    pkg_str = '\n'.join([text_pad + i for i in all_pkgs])
    ext_str = '\n'.join([text_pad + i for i in ext_list])
    pkg_str = pkg_str.replace('-lower-quantile ', '-lower-quantile\n' + text_pad).replace(' pg_idkit_','\n' + text_pad + 'pg_idkit_')
    ext_str = ext_str.replace('lower_quantile ', 'lower_quantile\n' + text_pad)
    if header:
        return head_pad + 'repo_packages:\n%s' % pkg_str , head_pad + 'pg_extensions:\n%s' % ext_str
    else:
        return pkg_str , ext_str


def gen_oss_conf(ver):
    pkg_ext = []
    current_date = datetime.now().strftime("%Y-%m-%d")
    for distro in DISTROS:
        pkg_str, ext_str = gen_param(ver,distro, 4)
        entry = """%s\n%s""" % (pkg_str, ext_str)
        pkg_ext.append(entry)

    rpm_repo = '\n'.join(['          ' + i.replace('https://repo.pigsty.io', 'http://10.10.10.1').replace('https://repo.pigsty.cc', 'http://10.10.10.1') for i in RPM_REPO.split('\n')])
    deb_repo =  '\n'.join(['          ' + i.replace('https://repo.pigsty.io', 'http://10.10.10.1').replace('https://repo.pigsty.cc', 'http://10.10.10.1') for i in DEB_REPO.split('\n')])
    args = tuple([ver,ver,current_date,ver,rpm_repo,deb_repo] + pkg_ext)
    output_path = os.path.join(CONF_PATH, 'pg%s.yml' % ver)
    OSS_CONF_TMPL = open(os.path.join(CONF_PATH,  'template.yml')).read()
    with open(output_path, 'w') as dst:
        dst.write(OSS_CONF_TMPL % args)



def gen_distro_conf(ver, distro):
    current_date = datetime.now().strftime("%Y-%m-%d")
    pkg_str, ext_str = gen_param(ver, distro)
    ext_str, pkg_str = '\n'.join(['        #' + i for i in ext_str.split('\n')]), '\n'.join(['    ' + i for i in pkg_str.split('\n')])

    input_path = os.path.join(TMPL_PATH, distro + '.yml')
    TMPL = open(input_path).read()
    if distro in ['el7', 'el8', 'el9']:
        res = TMPL % (ver, ver, current_date, ext_str, RPM_REPO, pkg_str, ver)
    else:
        res = TMPL % (ver, ver, current_date, ext_str, DEB_REPO, pkg_str, ver)
    output_path = os.path.join(CONF_PATH, '%s-pg%s.yml' % (distro, ver))
    with open(output_path, 'w') as dst:
        dst.write(res)




def render_pg_ver(vers):
    return '%2s %2s %2s %2s %2s %2s'% (
        '17' if '17' in vers else '',
        '16' if '16' in vers else '',
        '15' if '15' in vers else '',
        '14' if '14' in vers else '',
        '13' if '13' in vers else '',
        '12' if '12' in vers else '',
    )

def title_box(header, comment):
    return """\n  #--------------------------------#\n  # %-5s %s \n  #--------------------------------#""" % (header + ':', comment)



def gen_rpm_package_map(distro):
    LAYOUT, LAYOUT2 = '  %-24s "%s"', '  %-24s %-42s # %s'
    cate, buf = '', []

    buf.append('package_map:')
    buf.append(title_box('REPO','download packages'))
    buf.append( LAYOUT % ('node-bootstrap:', DISTRO_ADHOC_PKG.get(distro)))
    buf.append(LAYOUT % ('infra-package:', RPM_COMMON_PKG[0]))
    buf.append(LAYOUT % ('infra-addons:' , RPM_COMMON_PKG[1]))
    buf.append(LAYOUT % ('node-package1:', RPM_COMMON_PKG[2]))
    buf.append(LAYOUT % ('node-package2:', RPM_COMMON_PKG[3]))
    buf.append(LAYOUT % ('pgsql-utility:', RPM_COMMON_PKG[4]) + '\n')

    buf.append(title_box('PGSQL','kernel packages'))
    buf.append(LAYOUT % ('postgresql:', 'postgresql$v*'))
    for k,rpm_pkg, deb_pkg in PGSQL_KERNEL_MAP:
        buf.append(LAYOUT % ('%s:'% k, rpm_pkg))

    buf.append(title_box('MISC','pro modules'))
    for k,rpm_pkg, deb_pkg in PGSQL_EXOTIC_MAP:
        if k in ("wiltondb", "polardb","ivorysql","ivorysql-all", "supabase"):
            buf.append(LAYOUT % ('%s:'% k, rpm_pkg))
    if distro == 'el7':
        buf.append(LAYOUT % ('%s:'% "greenplum", "open-source-greenplum-db-6" ))
        buf.append(LAYOUT % ('%s:'% "gpsql", "cloudberrydb open-source-greenplum-db-6 apr" ))
        buf.append(LAYOUT % ('%s:'% "java-runtime", "java-11-openjdk-src java-11-openjdk-headless" ))
    elif distro == 'el8':
        buf.append(LAYOUT % ('%s:'% "greenplum", "open-source-greenplum-db-7" ))
        buf.append(LAYOUT % ('%s:'% "gpsql", "cloudberry-db cloudberry-hll cloudberry-pgvector open-source-greenplum-db-7 apr" ))
        buf.append(LAYOUT % ('%s:'% "java-runtime", "java-17-openjdk-src java-17-openjdk-headless" ))
    elif distro == 'el9':
        buf.append(LAYOUT % ('%s:'% "greenplum", "open-source-greenplum-db-7" ))
        buf.append(LAYOUT % ('%s:'% "gpsql", "cloudberry-db cloudberry-hll cloudberry-pgvector" ))
        buf.append(LAYOUT % ('%s:'% "java-runtime", "java-17-openjdk-src java-17-openjdk-headless" ))
    buf.append(LAYOUT % ('%s:'% "kafka", "kafka kafka_exporter" ))
    if distro in ('el7', 'el8'):
        buf.append(LAYOUT % ('%s:'% "kube-runtime", "containerd.io cri-dockerd" ))
    elif distro == 'el9':
        buf.append(LAYOUT % ('%s:'% "kube-runtime", "containerd.io" ))
    buf.append(LAYOUT % ('%s:'% "sealos", "sealos" ))
    buf.append(LAYOUT % ('%s:'% "kubernetes", "kubeadm kubelet kubectl" ))
    buf.append(LAYOUT % ('%s:'% "docker", "docker-ce docker-compose-plugin" ))
    buf.append(LAYOUT % ('%s:'% "infra-extra", "victoria-metrics* victoria-logs vlogscli vector mysqld_exporter mongodb_exporter kafka_exporter rclone" ))
    buf.append(LAYOUT % ('%s:'% "tigerbeetle", "tigerbeetle" ))

    buf.append(title_box('PGSQL','tools & utils'))
    for k,rpm_pkg, deb_pkg in PGSQL_UTIL_MAP:
        buf.append(LAYOUT % ('%s:'% k, rpm_pkg))

    if distro in ['el8', 'el9']:
        buf.append(title_box('PGSQL','extensions (pg17)'))
        buf.append('\n'.join([ i.replace('pg17-', 'pgsql-').replace('17', '$v') for i in gen_pkg_list('17', distro) ]))
    elif distro == 'el7':
        buf.append(title_box('PGSQL','extensions (pg15)'))
        buf.append('\n'.join([ i.replace('pg15-', 'pgsql-').replace('15', '$v') for i in gen_pkg_list('15', distro) ]))

    pg_vers = PG_VERS
    if distro == 'el7': pg_vers = ['15','14','13','12']
    for ver in pg_vers:
        buf.append(title_box('PG' + str(ver),'packages'))
        for k,rpm_pkg, deb_pkg in PGSQL_KERNEL_MAP:
            buf.append(LAYOUT % ('%s:'% k.replace('pgsql', 'pg' + ver), rpm_pkg.replace('$v', ver)))
        buf.append('\n'.join(gen_pkg_list(ver, distro)))

    for ext in DATA:
        if not ext['lead'] or ext['rpm_repo'] == 'CONTRIB': continue
        if cate != ext['category']:
            cate = ext['category']
            buf.append(title_box(cate.upper(),'extension'))

        if ext['alias'] == 'hunspell_cs_cz':
            buf.append(LAYOUT2 % ('hunspell:',  '"hunspell_cs_cz_$v hunspell_de_de_$v hunspell_en_us_$v hunspell_fr_$v hunspell_ne_np_$v hunspell_nl_nl_$v hunspell_nn_no_$v hunspell_ru_ru_$v hunspell_ru_ru_aot_$v"',  "# hunspell_pt_pt_$v"))
        alias, pkg  = ext['alias'], ext['rpm_pkg']
        if alias == 'pljava' and distro != 'el9' :
            buf.append(LAYOUT2 % ('pljava:' , '"pljava_$v*"',  '%s not available  #' % distro))
            continue
        if pkg == '': pkg = alias + '_$v*' # try to generate that rpm pattern
        if ext['rpm_pkg'] != '':
            pg_ver = render_pg_ver(ext['rpm_pg'])
            if ext['alias'] == 'pgaudit': pg_ver =  render_pg_ver(['17','16'])
            if ext['alias'] == 'postgis' and distro in ['el8','el9']: pg_ver =  render_pg_ver(['17','16','15','14','13'])
            if ext['alias'] == 'postgis' and distro == 'el7':
                buf.append(LAYOUT2 % ('postgis:' , '"pgaudit33_$v*"', "      15 14 13 12  # el7 with pg12-15"))
        else:
            pg_ver = '%s not available ' % distro
        comment = '%-18s # %s' % (pg_ver, EXTRA_COMMENT.get(alias,''))
        buf.append(LAYOUT2 % ( alias + ':' , '"'+ pkg + '"', comment))
        if ext['alias'] == 'pgaudit':
            buf.append(LAYOUT2 % ('pgaudit17:' , '"pgaudit17_$v*"', "      15           # rpm pg15 only"))
            buf.append(LAYOUT2 % ('pgaudit16:' , '"pgaudit16_$v*"', "         14        # rpm pg14 only"))
            buf.append(LAYOUT2 % ('pgaudit15:' , '"pgaudit15_$v*"', "            13     # rpm pg13 only"))
            buf.append(LAYOUT2 % ('pgaudit14:' , '"pgaudit14_$v*"', "               12  # rpm pg12 only"))
        if ext['alias'] == 'postgis' and distro in ['el8','el9']:
            buf.append(LAYOUT2 % ('postgis34:' , '"pgaudit34_$v*"', "               12  # el8/el9 pg12 only"))
    return '\n'.join(buf)



def gen_deb_package_map(distro):
    LAYOUT, LAYOUT2 = '  %-24s "%s"', '  %-24s %-42s # %s'
    cate, buf = '', []

    buf.append('package_map:')
    buf.append(title_box('REPO','download packages'))
    buf.append( LAYOUT % ('node-bootstrap:', DISTRO_ADHOC_PKG.get(distro)))
    buf.append(LAYOUT % ('infra-package:', DEB_COMMON_PKG[0]))
    buf.append(LAYOUT % ('infra-addons:' , DEB_COMMON_PKG[1]))
    buf.append(LAYOUT % ('node-package1:', DEB_COMMON_PKG[2]))
    buf.append(LAYOUT % ('node-package2:', DEB_COMMON_PKG[3]))
    buf.append(LAYOUT % ('pgsql-utility:', DEB_COMMON_PKG[4]) + '\n')

    buf.append(title_box('PGSQL','kernel packages'))
    buf.append(LAYOUT % ('postgresql:', 'postgresql-$v postgresql-client-$v postgresql-plpython3-$v postgresql-plperl-$v postgresql-pltcl-$v postgresql-server-dev-$v'))
    for k,rpm_pkg, deb_pkg in PGSQL_KERNEL_MAP:
        buf.append(LAYOUT % ('%s:'% k, deb_pkg))

    buf.append(title_box('MISC','pro modules'))
    for k,rpm_pkg, deb_pkg in PGSQL_EXOTIC_MAP:
        if k in ("wiltondb", "polardb", "supabase"):
            buf.append(LAYOUT % ('%s:'% k, deb_pkg))
    buf.append(LAYOUT % ('%s:'% "java-runtime", "openjdk-17-jdk" ))
    buf.append(LAYOUT % ('%s:'% "kafka", "kafka kafka-exporter" ))
    if distro in ('u22', 'd12'):
        buf.append(LAYOUT % ('%s:'% "kube-docker", "containerd.io cri-dockerd" ))
    elif distro in ('d11', 'u20'):
        buf.append(LAYOUT % ('%s:'% "kube-docker", "containerd.io" ))
    buf.append(LAYOUT % ('%s:'% "sealos", "sealos" ))
    buf.append(LAYOUT % ('%s:'% "kubernetes", "kubeadm kubelet kubectl" ))
    buf.append(LAYOUT % ('%s:'% "docker", "docker-ce docker-compose-plugin" ))
    buf.append(LAYOUT % ('%s:'% "infra-extra", "victoria-metrics victoria-metrics-utils victoria-metrics-cluster victoria-logs vlogscli vector mysqld-exporter mongodb-exporter kafka-exporter rclone" ))
    buf.append(LAYOUT % ('%s:'% "tigerbeetle", "tigerbeetle" ))

    buf.append(title_box('PGSQL','tools & utils'))
    for k,rpm_pkg, deb_pkg in PGSQL_UTIL_MAP:
        buf.append(LAYOUT % ('%s:'% k, deb_pkg))

    buf.append(title_box('PGSQL','extensions (pg17)'))
    buf.append('\n'.join([ i.replace('pg17-', 'pgsql-').replace('17', '$v') for i in gen_pkg_list('17', distro) ]))

    for ver in PG_VERS:
        buf.append(title_box('PG' + str(ver),'packages'))
        for k,rpm_pkg, deb_pkg in PGSQL_KERNEL_MAP:
            buf.append(LAYOUT % ('%s:'% k.replace('pgsql', 'pg' + ver), deb_pkg.replace('$v', ver)))
        buf.append('\n'.join(gen_pkg_list(ver, distro)))

    for ext in DATA:
        if not ext['lead'] or ext['deb_repo'] == 'CONTRIB': continue
        if cate != ext['category']:
            cate = ext['category']
            buf.append(title_box(cate.upper(),'extension'))

        if ext['alias'] == 'hunspell_cs_cz':
            buf.append(LAYOUT2 % ('hunspell:', '"postgresql-$v-hunspell-cs-cz,postgresql-$v-hunspell-de-de,postgresql-$v-hunspell-en-us,postgresql-$v-hunspell-fr,postgresql-$v-hunspell-ne-np,postgresql-$v-hunspell-nl-nl,postgresql-$v-hunspell-nn-no,postgresql-$v-hunspell-ru-ru,postgresql-$v-hunspell-ru-ru-aot"', "# postgresql-$v-hunspell-pt-pt"))
        alias, pkg  = ext['alias'], ext['deb_pkg']
        if alias == 'pljava' and distro in ('u20', 'd11') :
            buf.append(LAYOUT2 % ('pljava:' , '"pljava_$v*"',  '%s not available  #' % distro))
            continue
        if distro == 'u24' and alias in ["pgml", "citus", "topn", "timescaledb_toolkit"]:
            buf.append(LAYOUT2 % (alias + ':' , '"'+ pkg + '"', 'u24 not available  #'))
            continue

        if pkg == '': pkg = 'postgresql-$v-' + alias.replace('_', '-') # try to generate that deb pattern
        if ext['deb_pkg'] != '':
            pg_ver = render_pg_ver(ext['deb_pg'])
            if ext['alias'] == 'citus': pg_ver =  render_pg_ver(['16','15','14'])
        else:
            pg_ver = '%s not available ' % distro
        comment = '%-18s # %s' % (pg_ver, EXTRA_COMMENT.get(alias,''))
        buf.append(LAYOUT2 % ( alias + ':' , '"'+ pkg + '"', comment))
        if ext['alias'] == 'citus':
            buf.append(LAYOUT2 % ('citus11:' ,'"postgresql-$v-citus-11.3"', "            13     # deb pg13 only"))
            buf.append(LAYOUT2 % ('citus10:' ,'"postgresql-$v-citus-10.2"', "               12  # deb pg12 only"))
    return '\n'.join(buf)


def gen_distro_vars():
    for distro in ['el7', 'el8', 'el9']:
        upstream_repo = '\n'.join(['  ' + i for i in (RPM_REPO).split('\n')])
        content = RPM_VARS_TMPL % (distro, DISTRO_FULLNAME.get(distro, distro), upstream_repo, gen_rpm_package_map(distro))
        filepath = os.path.join(VARS_PATH, '%s.yml' % distro)
        with open(filepath, 'w') as dst:
            dst.write(content)
    for distro in ['d12', 'u22', 'u24', 'u20', 'd11']:
        upstream_repo = '\n'.join(['  ' + i for i in DEB_REPO.split('\n')])
        content = DEB_VARS_TMPL % (distro, DISTRO_FULLNAME.get(distro, distro), upstream_repo, gen_deb_package_map(distro))
        filepath = os.path.join(VARS_PATH, '%s.yml' % distro)
        with open(filepath, 'w') as dst:
            dst.write(content)


def gen_build_conf():
    for ver in PG_VERS:
        gen_oss_conf(ver)

gen_build_conf()
gen_distro_vars()

