#!/bin/bash
set -euo pipefail
#==============================================================#
# File      :   pg-backup
# Desc      :   make physical backup with pgbackrest
# Ctime     :   2022-12-29
# Mtime     :   2022-12-29
# Path      :   /pg/bin/pg-backup
# Deps      :   pgbackrest, pg-role
# License   :   AGPLv3 @ https://pigsty.io/docs/about/license
# Copyright :   2018-2025  Ruohang Feng / Vonng (rh@vonng.com)
#==============================================================#
PROG_NAME="$(basename $0)"
PROG_DIR="$(cd $(dirname $0) && pwd)"


#--------------------------------------------------------------#
# Usage
#--------------------------------------------------------------#
# pg-backup [full|diff|incr]
#
# run this script with dbsu, only primary instance will continue
# FYI: https://pgbackrest.org/user-guide-rhel.html#concept/backup
#
# example:
#   pg-backup       # make a backup, incr, or full backup if necessary
#   pg-backup full  # make a full backup
#   pg-backup diff  # make a differential backup
#   pg-backup incr  # make a incremental backup
#
#--------------------------------------------------------------#


#--------------------------------------------------------------#
# Param
#--------------------------------------------------------------#
BACKUP_MODE=${1-''}


#--------------------------------------------------------------#
# Check
#--------------------------------------------------------------#
is_cron_job() {
  local pid=$$
  local count=0

  while [[ $pid -ne 1 ]] && [[ $count -lt 5 ]]; do
    local name=$(ps -o comm= -p "$pid" 2>/dev/null | tr -d ' ')
    local ppid=$(ps -o ppid= -p "$pid" 2>/dev/null | tr -d ' ')

    if [[ "$name" =~ ^(cron|crond|\[cron\]|\[crond\])$ ]]; then
        return 0
    fi

    # 更新 pid 并增加计数器
    pid=$ppid
    ((count++))
  done

  return 1
}


#--------------------------------------------------------------#
# Check
#--------------------------------------------------------------#
if [[ $(/pg/bin/pg-role) != "primary" ]]; then
  msg="this script should run on pgsql primary instance"
  if is_cron_job; then
    echo "[INFO] ${msg}, skip"
    exit 0
  fi
  echo "[FAIL] ${msg}"
  exit 1
fi

if [[ "$(whoami)" != "postgres" ]]; then
  echo "[FAIL] run this as dbsu postgres"
  exit 1
fi

BACKUP_TYPE=''
if [[ "$BACKUP_MODE" == "incr" || "${BACKUP_MODE}" == "full" || "${BACKUP_MODE}" == "diff" ]]; then
  BACKUP_TYPE="--type=${BACKUP_MODE}"
elif [[ "$BACKUP_MODE" == "" ]]; then
  BACKUP_TYPE="--type=incr"
else
  echo "[FAIL] invalid backup mode: ${BACKUP_MODE}"
  exit 1
fi

STANZA=$(grep -o '\[[^][]*]' /etc/pgbackrest/pgbackrest.conf | head -n1 | sed 's/.*\[\([^]]*\)].*/\1/')

echo /usr/bin/pgbackrest --stanza="${STANZA}" "${BACKUP_TYPE}" backup
/usr/bin/pgbackrest --stanza="${STANZA}" "${BACKUP_TYPE}" backup