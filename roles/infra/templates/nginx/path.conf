# LOCAL PATH {{ upstream_name }}: {{ upstream.domain }} -> {{ upstream.path }}

server {
    server_name  {{ upstream.domain }}{% if 'domains' in upstream and upstream.domains is sequence %}{% for domain in upstream.domains %} {{ domain }}{% endfor %}{% endif %};
    listen       {{ nginx_port|default(80) }};
{% if nginx_sslmode != 'disable' %}
    listen       {{ nginx_ssl_port|default(443) }} ssl;
{% if 'certbot' in upstream and upstream.certbot != '' %}
    ssl_certificate     {% if upstream.cert is defined %}{{ upstream.cert }}{% else %} /etc/letsencrypt/live/{{ upstream.certbot }}/fullchain.pem{% endif %};# managed by Certbot, aligned by pigsty
    ssl_certificate_key {% if upstream.key is defined %}{{ upstream.key }}{% else %} /etc/letsencrypt/live/{{ upstream.certbot }}/privkey.pem{% endif %}; # managed by Certbot, aligned by pigsty
{% else %}
    ssl_certificate     {% if upstream.cert is defined %}{{ upstream.cert }}{% else %}/etc/nginx/conf.d/cert/pigsty.crt{% endif %}; # managed by pigsty
    ssl_certificate_key {% if upstream.key is defined %}{{ upstream.key }}{% else %}/etc/nginx/conf.d/cert/pigsty.key{% endif %}; # managed by pigsty
{% endif %}
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;
{% endif %}

{% if upstream.websocket is defined and upstream.websocket|bool %}
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
{% endif %}

{% if 'log' in upstream and upstream.log != '' %}
    access_log /var/log/nginx/{{ upstream.log }};
{{ endif }}

    # home server
    location / {
        root        {{ upstream.path }};
        index       index.html;
{% if 'index' in upstream and upstream.index|bool %}
        autoindex   on;
        autoindex_exact_size on;
        autoindex_localtime on;
        autoindex_format html;
{% else %}
        autoindex   off;
{% endif %}
    }
}
