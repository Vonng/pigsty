---
#--------------------------------------------------------------#
# Prometheus FHS
#--------------------------------------------------------------#
# /etc/prometheus/
#  ^-----prometheus.yml     # prometheus main config file
#  ^-----@bin               # scripts: check,reload,status,new
#  ^-----@rules             # record & alerting rules dir
#  ^-----@targets           # file service discovery targets
#            ^-----@node    # node  static targets definition
#            ^-----@ping    # ping all nodes under pigsty
#            ^-----@etcd    # etcd static targets definition
#            ^-----@infra   # infra static targets definition
#            ^-----@pgsql   # pgsql static targets definition
#            ^-----@redis   # redis static targets definition
#            ^-----@minio   # minio static targets definition
#            ^-----@mongo   # mongo static targets definition
#            ^-----@mysql   # mysql static targets definition
#            ^-----@kafka   # kafka static targets definition
#            ^-----@docker  # docker static targets definition
#--------------------------------------------------------------#


#--------------------------------------------------------------#
# Install Prometheus                        [prometheus_install]
#--------------------------------------------------------------#
#- name: make sure prometheus installed
#  tags: prometheus_install
#  package: name=prometheus state=present


#--------------------------------------------------------------#
# Cleanup Prometheus                          [prometheus_clean]
#--------------------------------------------------------------#
# remove existing prometheus data & config if prometheus_clean is true
- name: cleanup prometheus data and config
  tags: prometheus_clean
  when: prometheus_clean|bool
  ignore_errors: true
  block:
    - name: stop prometheus service
      tags: prometheus_stop
      systemd: name=prometheus state=stopped enabled=no daemon_reload=yes
    - name: remove prometheus config dir
      tags: prometheus_rmconf
      file: path=/etc/prometheus state=absent
    - name: remove prometheus file_sd dir
      tags: prometheus_rmsd
      file: path=/etc/prometheus state=absent
    - name: remove prometheus data
      tags: prometheus_rmdata
      file: path={{ prometheus_data }}/data state=absent


#--------------------------------------------------------------#
# Create Prometheus Dir                         [prometheus_dir]
#--------------------------------------------------------------#
- name: create prometheus data dir
  tags: prometheus_dir
  file: path="{{ prometheus_data }}/data" state=directory owner=prometheus group=prometheus mode=700

- name: create prometheus conf dir
  tags: prometheus_dir
  file: path={{ item }} state=directory owner=prometheus group=prometheus mode=750
  with_items:
    - /etc/prometheus
    - /etc/prometheus/bin
    - /etc/prometheus/rules
    - "{{ prometheus_sd_dir }}"
    - "{{ prometheus_sd_dir }}/node"
    - "{{ prometheus_sd_dir }}/ping"
    - "{{ prometheus_sd_dir }}/etcd"
    - "{{ prometheus_sd_dir }}/infra"
    - "{{ prometheus_sd_dir }}/pgsql"
    - "{{ prometheus_sd_dir }}/pgrds"
    - "{{ prometheus_sd_dir }}/redis"
    - "{{ prometheus_sd_dir }}/minio"
    - "{{ prometheus_sd_dir }}/mongo"
    - "{{ prometheus_sd_dir }}/mysql"
    - "{{ prometheus_sd_dir }}/kafka"
    - "{{ prometheus_sd_dir }}/docker"
    - "{{ prometheus_sd_dir }}/patroni"


#--------------------------------------------------------------#
# Config Prometheus                          [prometheus_config]
#--------------------------------------------------------------#
- name: config prometheus
  tags: prometheus_config
  block:

    # - service - #
    - name: copy prometheus systemd service
      tags: prometheus_conf
      copy: src=prometheus.service dest={{ systemd_dir }}/prometheus.service

    # - prometheus opts - #
    - name: render /etc/default/prometheus
      tags: prometheus_conf
      copy:
        dest: /etc/default/prometheus
        owner: prometheus
        mode: 0755
        content: |
          PROMETHEUS_OPTS='--config.file=/etc/prometheus/prometheus.yml --web.page-title="Pigsty Metrics" --storage.tsdb.path={{ prometheus_data }}/data {{ prometheus_options }}'

    # - prometheus config - #
    - name: render prometheus config
      tags: prometheus_conf
      template: src=prometheus/prometheus.yml.j2 dest=/etc/prometheus/prometheus.yml owner=prometheus mode=0644

    # - bin scripts - #
    - name: copy prometheus bin scripts
      tags: prometheus_bin
      copy: src=prometheus/bin/ dest=/etc/prometheus/bin/ owner=prometheus mode=0755

    # - copy rules - #
    - name: copy prometheus rules
      tags: prometheus_rule
      copy: src=prometheus/rules/ dest=/etc/prometheus/rules/ owner=prometheus mode=0644

    # - agent.yml - #
    - name: render prometheus agent rules
      tags: prometheus_rule
      template: src=prometheus/agent.yml.j2 dest=/etc/prometheus/rules/agent.yml owner=prometheus mode=0644


#--------------------------------------------------------------#
# Launch Prometheus                          [prometheus_launch]
#--------------------------------------------------------------#
# launch prometheus on port 9090
- name: launch prometheus
  tags: prometheus_launch
  when: prometheus_enabled|bool
  block:
    - name: launch prometheus systemd service
      systemd: name=prometheus state=restarted enabled=yes daemon_reload=yes
    - name: wait for prometheus service online
      wait_for: host=127.0.0.1 port=9090 state=started


#--------------------------------------------------------------#
# Reload Prometheus                          [prometheus_reload]
#--------------------------------------------------------------#
# reload when config changed, check before reload
- name: reload prometheus
  tags: [ prometheus_config, prometheus_reload ]
  when: prometheus_enabled|bool
  shell: |
    #!/bin/bash
    if ! promtool check config /etc/prometheus/prometheus.yml; then
      echo "prometheus config check failed"
      exit 1
    else
      systemctl daemon-reload
      systemctl reload prometheus
      exit 0
    fi
  args: { executable: /bin/bash }
...