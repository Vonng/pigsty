---
#--------------------------------------------------------------#
# Create Directory
#--------------------------------------------------------------#
# assumption:
#   {{ pg_fs_main }} for main data   , default: `/data`              [fast ssd]
#   {{ pg_fs_bkup }} for backup data , default: `/data/backups`     [cheap hdd]
#--------------------------------------------------------------#
# default variable:
#     pg_fs_main = /data             fast ssd
#     pg_fs_bkup = /data/backups     cheap hdd (optional)
#
#     /pg      -> /data/postgres/pg-test-16    (soft link)
#     /pg/data -> /data/postgres/pg-test-16/data
#--------------------------------------------------------------#
- name: create postgresql directories
  tags: pg_dir
  become: yes
  block:

    - name: make main and backup data dir
      file: path={{ item }} state=directory owner=root mode=0777
      with_items:
        - "{{ pg_fs_main }}"
        - "{{ pg_fs_bkup }}"

    # pg_cluster_dir:    "{{ pg_fs_main }}/postgres/{{ pg_cluster }}-{{ pg_version }}"
    - name: create postgres directories
      file: path={{ item }} state=directory owner={{ pg_dbsu }} group=postgres mode=0700
      with_items:
        - "{{ pg_fs_main }}/postgres"
        - "{{ pg_cluster_dir }}"
        - "{{ pg_cluster_dir }}/bin"
        - "{{ pg_cluster_dir }}/log"
        - "{{ pg_cluster_dir }}/tmp"
        - "{{ pg_cluster_dir }}/cert"
        - "{{ pg_cluster_dir }}/conf"
        - "{{ pg_cluster_dir }}/data"
        - "{{ pg_cluster_dir }}/meta"
        - "{{ pg_cluster_dir }}/stat"
        - "{{ pg_cluster_dir }}/change"
        - "{{ pg_backup_dir }}/backup"
        - "/var/run/postgresql"

    - name: List files in a directory
      ansible.builtin.command:
        cmd: ls "{{ pg_cluster_dir }}/data"

    # make sure the /var/run/postgresql is created
    - name: create /var/run/postgresql tmpfiles.d
      copy:
        dest: /etc/tmpfiles.d/postgresql.conf
        content: "d /var/run/postgresql 0755 {{ pg_dbsu }} postgres -"
        owner: root
        group: root
        mode: '0644'

    - name: create link for pg backup dir
      file: src={{ pg_backup_dir }}/backup dest={{ pg_cluster_dir }}/backup state=link

    - name: create links from current cluster
      file: src={{ pg_cluster_dir }} dest=/pg state=link

    # do not create log dir before data dir (create when data dir is not prefix of log dir)
    - name: create external postgres log dir
      when: not ( pg_log_dir.startswith(pg_data) )
      file: path={{ pg_log_dir }} state=directory owner={{ pg_dbsu }} group=postgres mode=0700

    - name: create patroni and pgbouncer log dir
      file: path={{ item }} state=directory owner={{ pg_dbsu }} group=postgres mode=0700
      with_items:
        - "{{ patroni_log_dir }}"
        - "{{ pgbouncer_log_dir }}"
        - "{{ pgbackrest_log_dir }}"

    # create config dir
    - name: create postgres config directories
      file: path={{ item }} state=directory owner={{ pg_dbsu }} group=postgres mode=0700
      with_items:
        - "/etc/patroni/"
        - "/etc/pgbackrest/"
        - "/etc/pgbouncer/"

    - name: create config alias soft links
      ignore_errors: true
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ pg_dbsu }}"
        state: link
        force: yes
      with_items:
        - { src: "{{ pg_data }}/postgresql.conf"      , dest: /pg/conf/pg.ini    }
        - { src: "{{ pg_data }}/postgresql.auto.conf" , dest: /pg/conf/pga.ini   }
        - { src: "{{ pg_data }}/pg_hba.conf"          , dest: /pg/conf/hba       }
        - { src: "/etc/pgbackrest/pgbackrest.conf"    , dest: /pg/conf/pb.ini    }
        - { src: "/etc/pgbouncer/pgbouncer.ini"       , dest: /pg/conf/pgb.ini   }
        - { src: "/etc/pgbouncer/pgb_hba.conf"        , dest: /pg/conf/pgb_hba   }
        - { src: "/etc/pgbouncer/database.txt"        , dest: /pg/conf/db        }
        - { src: "/etc/pgbouncer/userlist.txt"        , dest: /pg/conf/user      }
        - { src: "/etc/patroni/patroni.yml"           , dest: /pg/conf/pt.yml    }
        - { src: "{{ pg_data }}/patroni.dynamic.json" , dest: /pg/conf/dy.json   }
        - { src: "/etc/pg_exporter.yml"               , dest: /pg/conf/exp.yml   }
        - { src: "/etc/default/vip-manager.yml"       , dest: /pg/conf/vip.yml   }
        - { src: "/etc/default/pg_exporter"           , dest: /pg/conf/pgexp.sh  }
        - { src: "/etc/default/pgbouncer_exporter"    , dest: /pg/conf/pgbexp.sh }

...