#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   app.yml
# Desc      :   copy and launch docker compose app
# Ctime     :   2025-01-11
# Mtime     :   2025-01-11
# Path      :   app.yml
# Docs      :   https://pigsty.io/docs/app
# License   :   AGPLv3 @ https://pigsty.io/docs/about/license
# Copyright :   2018-2025  Ruohang Feng / Vonng (rh@vonng.com)
#==============================================================#


# Run docker compose appplication (require the docker module)
- name: APP INSTALL
  hosts: all
  gather_facts: no
  become: yes
  vars:
    #app: pgadmin     # any entries in the app/ folder, required
    app_config: {}    # .env entries to override
  tasks:
    # check app defined and dir exists
    - name: check app arg defined
      tags: [always, app_preflight]
      become: no
      fail: msg="the 'app' arg is required, use -e app=<appname> to specify the name in the app/ folder"
      when: app is not defined

    # abort if local app not exists
    - name: check app folder exists
      tags: app_check
      connection: local
      become: no
      block:
        - name: check local app folder
          stat: path={{ playbook_dir }}/app/{{ app }}
          register: app_folder_stat

        - name: abort if local app not exists
          fail: {msg: "app/{{ app }} folder not exist"}
          when: not app_folder_stat.stat.exists

    # copy docker app folder to /opt/<app>
    - name: copy docker app dir
      tags: app_install
      copy: src="{{ playbook_dir }}/app/{{ app }}/" dest=/opt/{{ app }}/

    # append entries to app .env config (override existing entries)
    - name: overwrite docker app .env
      tags: app_config
      when: app_config is defined and app_config | type == 'dict' and app_config | length > 0
      lineinfile:
        path: /opt/{{ app }}/.env
        regexp: '^{{ item.key | upper }}='
        line: '{{ item.key | upper }}={{ item.value if item.value is not boolean else item.value | string | lower }}'
        create: yes
      loop: "{{ app_config | dict2items }}"

    # it may take a while to pull images, or very fast if you already have local image loaded
    - name: launch app
      tags: app_launch
      shell:
        cmd: docker compose up -d
        chdir: /opt/{{ app }}

...